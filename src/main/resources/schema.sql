DROP TABLE IF EXISTS bookings CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS comments CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS items CASCADE;

CREATE TABLE users (
  id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name  VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE requests (
  id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  description  VARCHAR(1000) NOT NULL,
  requestor_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  CONSTRAINT pk_requests PRIMARY KEY (id)
);

CREATE TABLE items (
  id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name        VARCHAR(255) NOT NULL,
  description VARCHAR(1000) NOT NULL,
  available   BOOLEAN NOT NULL,
  owner_id    INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  request_id  INTEGER REFERENCES requests(id),
  CONSTRAINT pk_items PRIMARY KEY (id)
);

CREATE TABLE bookings (
  id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  end_date   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  item_id    INTEGER NOT NULL REFERENCES items(id) ON DELETE CASCADE,
  booker_id  INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  status     VARCHAR(30) NOT NULL,
  CONSTRAINT pk_bookings PRIMARY KEY (id)
);

CREATE TABLE comments (
  id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  text      VARCHAR(1500) NOT NULL,
  item_id   INTEGER NOT NULL REFERENCES items(id) ON DELETE CASCADE,
  author_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  CONSTRAINT pk_comments PRIMARY KEY (id)
);